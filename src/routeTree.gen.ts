/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedHrImport } from './routes/_authenticated/hr'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedAdminImport } from './routes/_authenticated/admin'
import { Route as AuthenticatedStorageIndexImport } from './routes/_authenticated/storage/index'
import { Route as AuthenticatedHrIndexImport } from './routes/_authenticated/hr/index'
import { Route as AuthenticatedAdminIndexImport } from './routes/_authenticated/admin/index'
import { Route as AuthenticatedStorageUnitsImport } from './routes/_authenticated/storage/units'
import { Route as AuthenticatedStorageShelvesImport } from './routes/_authenticated/storage/shelves'
import { Route as AuthenticatedStorageAssignmentTransactionsImport } from './routes/_authenticated/storage/assignmentTransactions'
import { Route as AuthenticatedStorageAssignmentCardsImport } from './routes/_authenticated/storage/assignmentCards'
import { Route as AuthenticatedHrVacationsImport } from './routes/_authenticated/hr/vacations'
import { Route as AuthenticatedHrTimekeepingImport } from './routes/_authenticated/hr/timekeeping'
import { Route as AuthenticatedHrFinancesImport } from './routes/_authenticated/hr/finances'
import { Route as AuthenticatedHrEmployeesImport } from './routes/_authenticated/hr/employees'
import { Route as AuthenticatedHrDebitCreditAnalysisImport } from './routes/_authenticated/hr/debitCreditAnalysis'
import { Route as AuthenticatedAdminMachinesImport } from './routes/_authenticated/admin/machines'
import { Route as AuthenticatedAdminDepotsImport } from './routes/_authenticated/admin/depots'
import { Route as AuthenticatedStorageUnitIndexImport } from './routes/_authenticated/storage/unit/index'
import { Route as AuthenticatedStorageShelfIndexImport } from './routes/_authenticated/storage/shelf/index'
import { Route as AuthenticatedStorageFixtureCardsIndexImport } from './routes/_authenticated/storage/fixtureCards/index'
import { Route as AuthenticatedStorageAssignmentTransactionsIndexImport } from './routes/_authenticated/storage/assignmentTransactions/index'
import { Route as AuthenticatedStorageAssignmentCardsIndexImport } from './routes/_authenticated/storage/assignmentCards/index'
import { Route as AuthenticatedHrVacationsIndexImport } from './routes/_authenticated/hr/vacations/index'
import { Route as AuthenticatedHrTimekeepingIndexImport } from './routes/_authenticated/hr/timekeeping/index'
import { Route as AuthenticatedHrFinancesIndexImport } from './routes/_authenticated/hr/finances/index'
import { Route as AuthenticatedHrEmployeesIndexImport } from './routes/_authenticated/hr/employees/index'
import { Route as AuthenticatedAdminMachinesIndexImport } from './routes/_authenticated/admin/machines/index'
import { Route as AuthenticatedAdminDepotsIndexImport } from './routes/_authenticated/admin/depots/index'
import { Route as AuthenticatedAdminCompanyIndexImport } from './routes/_authenticated/admin/company/index'
import { Route as AuthenticatedAccountingCashAccountsIndexImport } from './routes/_authenticated/accounting/cashAccounts/index'
import { Route as AuthenticatedStorageUnitNewImport } from './routes/_authenticated/storage/unit/new'
import { Route as AuthenticatedStorageShelfNewImport } from './routes/_authenticated/storage/shelf/new'
import { Route as AuthenticatedStorageFixtureCardsNewImport } from './routes/_authenticated/storage/fixtureCards/new'
import { Route as AuthenticatedStorageAssignmentTransactionsNewImport } from './routes/_authenticated/storage/assignmentTransactions/new'
import { Route as AuthenticatedStorageAssignmentCardsNewImport } from './routes/_authenticated/storage/assignmentCards/new'
import { Route as AuthenticatedHrVacationsNewImport } from './routes/_authenticated/hr/vacations/new'
import { Route as AuthenticatedHrTimekeepingNewImport } from './routes/_authenticated/hr/timekeeping/new'
import { Route as AuthenticatedHrEmployeesNewImport } from './routes/_authenticated/hr/employees/new'
import { Route as AuthenticatedAdminMachinesNewImport } from './routes/_authenticated/admin/machines/new'
import { Route as AuthenticatedAdminDepotsNewImport } from './routes/_authenticated/admin/depots/new'
import { Route as AuthenticatedAdminCompanyNewImport } from './routes/_authenticated/admin/company/new'
import { Route as AuthenticatedAccountingCashAccountsNewImport } from './routes/_authenticated/accounting/cashAccounts/new'
import { Route as AuthenticatedStorageUnitIdIndexImport } from './routes/_authenticated/storage/unit/$id/index'
import { Route as AuthenticatedStorageShelfIdIndexImport } from './routes/_authenticated/storage/shelf/$id/index'
import { Route as AuthenticatedStorageFixtureCardsIdIndexImport } from './routes/_authenticated/storage/fixtureCards/$id/index'
import { Route as AuthenticatedStorageAssignmentTransactionsIdIndexImport } from './routes/_authenticated/storage/assignmentTransactions/$id/index'
import { Route as AuthenticatedStorageAssignmentCardsIdIndexImport } from './routes/_authenticated/storage/assignmentCards/$id/index'
import { Route as AuthenticatedHrTimekeepingIdIndexImport } from './routes/_authenticated/hr/timekeeping/$id/index'
import { Route as AuthenticatedHrEmployeesIdIndexImport } from './routes/_authenticated/hr/employees/$id/index'
import { Route as AuthenticatedAdminMachinesIdIndexImport } from './routes/_authenticated/admin/machines/$id/index'
import { Route as AuthenticatedAdminDepotsIdIndexImport } from './routes/_authenticated/admin/depots/$id/index'
import { Route as AuthenticatedAdminCompanyIdIndexImport } from './routes/_authenticated/admin/company/$id/index'
import { Route as AuthenticatedAccountingCashAccountsIdIndexImport } from './routes/_authenticated/accounting/cashAccounts/$id/index'
import { Route as AuthenticatedHrVacationsNewIdImport } from './routes/_authenticated/hr/vacations/new/$id'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedHrRoute = AuthenticatedHrImport.update({
  path: '/hr',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAdminRoute = AuthenticatedAdminImport.update({
  path: '/admin',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedStorageIndexRoute = AuthenticatedStorageIndexImport.update({
  path: '/storage/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHrIndexRoute = AuthenticatedHrIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedHrRoute,
} as any)

const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedAdminRoute,
} as any)

const AuthenticatedStorageUnitsRoute = AuthenticatedStorageUnitsImport.update({
  path: '/storage/units',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedStorageShelvesRoute =
  AuthenticatedStorageShelvesImport.update({
    path: '/storage/shelves',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageAssignmentTransactionsRoute =
  AuthenticatedStorageAssignmentTransactionsImport.update({
    path: '/storage/assignmentTransactions',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageAssignmentCardsRoute =
  AuthenticatedStorageAssignmentCardsImport.update({
    path: '/storage/assignmentCards',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedHrVacationsRoute = AuthenticatedHrVacationsImport.update({
  path: '/vacations',
  getParentRoute: () => AuthenticatedHrRoute,
} as any)

const AuthenticatedHrTimekeepingRoute = AuthenticatedHrTimekeepingImport.update(
  {
    path: '/timekeeping',
    getParentRoute: () => AuthenticatedHrRoute,
  } as any,
)

const AuthenticatedHrFinancesRoute = AuthenticatedHrFinancesImport.update({
  path: '/finances',
  getParentRoute: () => AuthenticatedHrRoute,
} as any)

const AuthenticatedHrEmployeesRoute = AuthenticatedHrEmployeesImport.update({
  path: '/employees',
  getParentRoute: () => AuthenticatedHrRoute,
} as any)

const AuthenticatedHrDebitCreditAnalysisRoute =
  AuthenticatedHrDebitCreditAnalysisImport.update({
    path: '/debitCreditAnalysis',
    getParentRoute: () => AuthenticatedHrRoute,
  } as any)

const AuthenticatedAdminMachinesRoute = AuthenticatedAdminMachinesImport.update(
  {
    path: '/machines',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any,
)

const AuthenticatedAdminDepotsRoute = AuthenticatedAdminDepotsImport.update({
  path: '/depots',
  getParentRoute: () => AuthenticatedAdminRoute,
} as any)

const AuthenticatedStorageUnitIndexRoute =
  AuthenticatedStorageUnitIndexImport.update({
    path: '/storage/unit/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageShelfIndexRoute =
  AuthenticatedStorageShelfIndexImport.update({
    path: '/storage/shelf/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageFixtureCardsIndexRoute =
  AuthenticatedStorageFixtureCardsIndexImport.update({
    path: '/storage/fixtureCards/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageAssignmentTransactionsIndexRoute =
  AuthenticatedStorageAssignmentTransactionsIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedStorageAssignmentTransactionsRoute,
  } as any)

const AuthenticatedStorageAssignmentCardsIndexRoute =
  AuthenticatedStorageAssignmentCardsIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedStorageAssignmentCardsRoute,
  } as any)

const AuthenticatedHrVacationsIndexRoute =
  AuthenticatedHrVacationsIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedHrVacationsRoute,
  } as any)

const AuthenticatedHrTimekeepingIndexRoute =
  AuthenticatedHrTimekeepingIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedHrTimekeepingRoute,
  } as any)

const AuthenticatedHrFinancesIndexRoute =
  AuthenticatedHrFinancesIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedHrFinancesRoute,
  } as any)

const AuthenticatedHrEmployeesIndexRoute =
  AuthenticatedHrEmployeesIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedHrEmployeesRoute,
  } as any)

const AuthenticatedAdminMachinesIndexRoute =
  AuthenticatedAdminMachinesIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedAdminMachinesRoute,
  } as any)

const AuthenticatedAdminDepotsIndexRoute =
  AuthenticatedAdminDepotsIndexImport.update({
    path: '/',
    getParentRoute: () => AuthenticatedAdminDepotsRoute,
  } as any)

const AuthenticatedAdminCompanyIndexRoute =
  AuthenticatedAdminCompanyIndexImport.update({
    path: '/company/',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)

const AuthenticatedAccountingCashAccountsIndexRoute =
  AuthenticatedAccountingCashAccountsIndexImport.update({
    path: '/accounting/cashAccounts/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageUnitNewRoute =
  AuthenticatedStorageUnitNewImport.update({
    path: '/storage/unit/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageShelfNewRoute =
  AuthenticatedStorageShelfNewImport.update({
    path: '/storage/shelf/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageFixtureCardsNewRoute =
  AuthenticatedStorageFixtureCardsNewImport.update({
    path: '/storage/fixtureCards/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageAssignmentTransactionsNewRoute =
  AuthenticatedStorageAssignmentTransactionsNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedStorageAssignmentTransactionsRoute,
  } as any)

const AuthenticatedStorageAssignmentCardsNewRoute =
  AuthenticatedStorageAssignmentCardsNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedStorageAssignmentCardsRoute,
  } as any)

const AuthenticatedHrVacationsNewRoute =
  AuthenticatedHrVacationsNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedHrVacationsRoute,
  } as any)

const AuthenticatedHrTimekeepingNewRoute =
  AuthenticatedHrTimekeepingNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedHrTimekeepingRoute,
  } as any)

const AuthenticatedHrEmployeesNewRoute =
  AuthenticatedHrEmployeesNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedHrEmployeesRoute,
  } as any)

const AuthenticatedAdminMachinesNewRoute =
  AuthenticatedAdminMachinesNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedAdminMachinesRoute,
  } as any)

const AuthenticatedAdminDepotsNewRoute =
  AuthenticatedAdminDepotsNewImport.update({
    path: '/new',
    getParentRoute: () => AuthenticatedAdminDepotsRoute,
  } as any)

const AuthenticatedAdminCompanyNewRoute =
  AuthenticatedAdminCompanyNewImport.update({
    path: '/company/new',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)

const AuthenticatedAccountingCashAccountsNewRoute =
  AuthenticatedAccountingCashAccountsNewImport.update({
    path: '/accounting/cashAccounts/new',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageUnitIdIndexRoute =
  AuthenticatedStorageUnitIdIndexImport.update({
    path: '/storage/unit/$id/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageShelfIdIndexRoute =
  AuthenticatedStorageShelfIdIndexImport.update({
    path: '/storage/shelf/$id/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageFixtureCardsIdIndexRoute =
  AuthenticatedStorageFixtureCardsIdIndexImport.update({
    path: '/storage/fixtureCards/$id/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedStorageAssignmentTransactionsIdIndexRoute =
  AuthenticatedStorageAssignmentTransactionsIdIndexImport.update({
    path: '/$id/',
    getParentRoute: () => AuthenticatedStorageAssignmentTransactionsRoute,
  } as any)

const AuthenticatedStorageAssignmentCardsIdIndexRoute =
  AuthenticatedStorageAssignmentCardsIdIndexImport.update({
    path: '/$id/',
    getParentRoute: () => AuthenticatedStorageAssignmentCardsRoute,
  } as any)

const AuthenticatedHrTimekeepingIdIndexRoute =
  AuthenticatedHrTimekeepingIdIndexImport.update({
    path: '/$id/',
    getParentRoute: () => AuthenticatedHrTimekeepingRoute,
  } as any)

const AuthenticatedHrEmployeesIdIndexRoute =
  AuthenticatedHrEmployeesIdIndexImport.update({
    path: '/$id/',
    getParentRoute: () => AuthenticatedHrEmployeesRoute,
  } as any)

const AuthenticatedAdminMachinesIdIndexRoute =
  AuthenticatedAdminMachinesIdIndexImport.update({
    path: '/$id/',
    getParentRoute: () => AuthenticatedAdminMachinesRoute,
  } as any)

const AuthenticatedAdminDepotsIdIndexRoute =
  AuthenticatedAdminDepotsIdIndexImport.update({
    path: '/$id/',
    getParentRoute: () => AuthenticatedAdminDepotsRoute,
  } as any)

const AuthenticatedAdminCompanyIdIndexRoute =
  AuthenticatedAdminCompanyIdIndexImport.update({
    path: '/company/$id/',
    getParentRoute: () => AuthenticatedAdminRoute,
  } as any)

const AuthenticatedAccountingCashAccountsIdIndexRoute =
  AuthenticatedAccountingCashAccountsIdIndexImport.update({
    path: '/accounting/cashAccounts/$id/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedHrVacationsNewIdRoute =
  AuthenticatedHrVacationsNewIdImport.update({
    path: '/$id',
    getParentRoute: () => AuthenticatedHrVacationsNewRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/hr': {
      id: '/_authenticated/hr'
      path: '/hr'
      fullPath: '/hr'
      preLoaderRoute: typeof AuthenticatedHrImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/depots': {
      id: '/_authenticated/admin/depots'
      path: '/depots'
      fullPath: '/admin/depots'
      preLoaderRoute: typeof AuthenticatedAdminDepotsImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/admin/machines': {
      id: '/_authenticated/admin/machines'
      path: '/machines'
      fullPath: '/admin/machines'
      preLoaderRoute: typeof AuthenticatedAdminMachinesImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/hr/debitCreditAnalysis': {
      id: '/_authenticated/hr/debitCreditAnalysis'
      path: '/debitCreditAnalysis'
      fullPath: '/hr/debitCreditAnalysis'
      preLoaderRoute: typeof AuthenticatedHrDebitCreditAnalysisImport
      parentRoute: typeof AuthenticatedHrImport
    }
    '/_authenticated/hr/employees': {
      id: '/_authenticated/hr/employees'
      path: '/employees'
      fullPath: '/hr/employees'
      preLoaderRoute: typeof AuthenticatedHrEmployeesImport
      parentRoute: typeof AuthenticatedHrImport
    }
    '/_authenticated/hr/finances': {
      id: '/_authenticated/hr/finances'
      path: '/finances'
      fullPath: '/hr/finances'
      preLoaderRoute: typeof AuthenticatedHrFinancesImport
      parentRoute: typeof AuthenticatedHrImport
    }
    '/_authenticated/hr/timekeeping': {
      id: '/_authenticated/hr/timekeeping'
      path: '/timekeeping'
      fullPath: '/hr/timekeeping'
      preLoaderRoute: typeof AuthenticatedHrTimekeepingImport
      parentRoute: typeof AuthenticatedHrImport
    }
    '/_authenticated/hr/vacations': {
      id: '/_authenticated/hr/vacations'
      path: '/vacations'
      fullPath: '/hr/vacations'
      preLoaderRoute: typeof AuthenticatedHrVacationsImport
      parentRoute: typeof AuthenticatedHrImport
    }
    '/_authenticated/storage/assignmentCards': {
      id: '/_authenticated/storage/assignmentCards'
      path: '/storage/assignmentCards'
      fullPath: '/storage/assignmentCards'
      preLoaderRoute: typeof AuthenticatedStorageAssignmentCardsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/storage/assignmentTransactions': {
      id: '/_authenticated/storage/assignmentTransactions'
      path: '/storage/assignmentTransactions'
      fullPath: '/storage/assignmentTransactions'
      preLoaderRoute: typeof AuthenticatedStorageAssignmentTransactionsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/storage/shelves': {
      id: '/_authenticated/storage/shelves'
      path: '/storage/shelves'
      fullPath: '/storage/shelves'
      preLoaderRoute: typeof AuthenticatedStorageShelvesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/storage/units': {
      id: '/_authenticated/storage/units'
      path: '/storage/units'
      fullPath: '/storage/units'
      preLoaderRoute: typeof AuthenticatedStorageUnitsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/hr/': {
      id: '/_authenticated/hr/'
      path: '/'
      fullPath: '/hr/'
      preLoaderRoute: typeof AuthenticatedHrIndexImport
      parentRoute: typeof AuthenticatedHrImport
    }
    '/_authenticated/storage/': {
      id: '/_authenticated/storage/'
      path: '/storage'
      fullPath: '/storage'
      preLoaderRoute: typeof AuthenticatedStorageIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/accounting/cashAccounts/new': {
      id: '/_authenticated/accounting/cashAccounts/new'
      path: '/accounting/cashAccounts/new'
      fullPath: '/accounting/cashAccounts/new'
      preLoaderRoute: typeof AuthenticatedAccountingCashAccountsNewImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/company/new': {
      id: '/_authenticated/admin/company/new'
      path: '/company/new'
      fullPath: '/admin/company/new'
      preLoaderRoute: typeof AuthenticatedAdminCompanyNewImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/admin/depots/new': {
      id: '/_authenticated/admin/depots/new'
      path: '/new'
      fullPath: '/admin/depots/new'
      preLoaderRoute: typeof AuthenticatedAdminDepotsNewImport
      parentRoute: typeof AuthenticatedAdminDepotsImport
    }
    '/_authenticated/admin/machines/new': {
      id: '/_authenticated/admin/machines/new'
      path: '/new'
      fullPath: '/admin/machines/new'
      preLoaderRoute: typeof AuthenticatedAdminMachinesNewImport
      parentRoute: typeof AuthenticatedAdminMachinesImport
    }
    '/_authenticated/hr/employees/new': {
      id: '/_authenticated/hr/employees/new'
      path: '/new'
      fullPath: '/hr/employees/new'
      preLoaderRoute: typeof AuthenticatedHrEmployeesNewImport
      parentRoute: typeof AuthenticatedHrEmployeesImport
    }
    '/_authenticated/hr/timekeeping/new': {
      id: '/_authenticated/hr/timekeeping/new'
      path: '/new'
      fullPath: '/hr/timekeeping/new'
      preLoaderRoute: typeof AuthenticatedHrTimekeepingNewImport
      parentRoute: typeof AuthenticatedHrTimekeepingImport
    }
    '/_authenticated/hr/vacations/new': {
      id: '/_authenticated/hr/vacations/new'
      path: '/new'
      fullPath: '/hr/vacations/new'
      preLoaderRoute: typeof AuthenticatedHrVacationsNewImport
      parentRoute: typeof AuthenticatedHrVacationsImport
    }
    '/_authenticated/storage/assignmentCards/new': {
      id: '/_authenticated/storage/assignmentCards/new'
      path: '/new'
      fullPath: '/storage/assignmentCards/new'
      preLoaderRoute: typeof AuthenticatedStorageAssignmentCardsNewImport
      parentRoute: typeof AuthenticatedStorageAssignmentCardsImport
    }
    '/_authenticated/storage/assignmentTransactions/new': {
      id: '/_authenticated/storage/assignmentTransactions/new'
      path: '/new'
      fullPath: '/storage/assignmentTransactions/new'
      preLoaderRoute: typeof AuthenticatedStorageAssignmentTransactionsNewImport
      parentRoute: typeof AuthenticatedStorageAssignmentTransactionsImport
    }
    '/_authenticated/storage/fixtureCards/new': {
      id: '/_authenticated/storage/fixtureCards/new'
      path: '/storage/fixtureCards/new'
      fullPath: '/storage/fixtureCards/new'
      preLoaderRoute: typeof AuthenticatedStorageFixtureCardsNewImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/storage/shelf/new': {
      id: '/_authenticated/storage/shelf/new'
      path: '/storage/shelf/new'
      fullPath: '/storage/shelf/new'
      preLoaderRoute: typeof AuthenticatedStorageShelfNewImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/storage/unit/new': {
      id: '/_authenticated/storage/unit/new'
      path: '/storage/unit/new'
      fullPath: '/storage/unit/new'
      preLoaderRoute: typeof AuthenticatedStorageUnitNewImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/accounting/cashAccounts/': {
      id: '/_authenticated/accounting/cashAccounts/'
      path: '/accounting/cashAccounts'
      fullPath: '/accounting/cashAccounts'
      preLoaderRoute: typeof AuthenticatedAccountingCashAccountsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/company/': {
      id: '/_authenticated/admin/company/'
      path: '/company'
      fullPath: '/admin/company'
      preLoaderRoute: typeof AuthenticatedAdminCompanyIndexImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/admin/depots/': {
      id: '/_authenticated/admin/depots/'
      path: '/'
      fullPath: '/admin/depots/'
      preLoaderRoute: typeof AuthenticatedAdminDepotsIndexImport
      parentRoute: typeof AuthenticatedAdminDepotsImport
    }
    '/_authenticated/admin/machines/': {
      id: '/_authenticated/admin/machines/'
      path: '/'
      fullPath: '/admin/machines/'
      preLoaderRoute: typeof AuthenticatedAdminMachinesIndexImport
      parentRoute: typeof AuthenticatedAdminMachinesImport
    }
    '/_authenticated/hr/employees/': {
      id: '/_authenticated/hr/employees/'
      path: '/'
      fullPath: '/hr/employees/'
      preLoaderRoute: typeof AuthenticatedHrEmployeesIndexImport
      parentRoute: typeof AuthenticatedHrEmployeesImport
    }
    '/_authenticated/hr/finances/': {
      id: '/_authenticated/hr/finances/'
      path: '/'
      fullPath: '/hr/finances/'
      preLoaderRoute: typeof AuthenticatedHrFinancesIndexImport
      parentRoute: typeof AuthenticatedHrFinancesImport
    }
    '/_authenticated/hr/timekeeping/': {
      id: '/_authenticated/hr/timekeeping/'
      path: '/'
      fullPath: '/hr/timekeeping/'
      preLoaderRoute: typeof AuthenticatedHrTimekeepingIndexImport
      parentRoute: typeof AuthenticatedHrTimekeepingImport
    }
    '/_authenticated/hr/vacations/': {
      id: '/_authenticated/hr/vacations/'
      path: '/'
      fullPath: '/hr/vacations/'
      preLoaderRoute: typeof AuthenticatedHrVacationsIndexImport
      parentRoute: typeof AuthenticatedHrVacationsImport
    }
    '/_authenticated/storage/assignmentCards/': {
      id: '/_authenticated/storage/assignmentCards/'
      path: '/'
      fullPath: '/storage/assignmentCards/'
      preLoaderRoute: typeof AuthenticatedStorageAssignmentCardsIndexImport
      parentRoute: typeof AuthenticatedStorageAssignmentCardsImport
    }
    '/_authenticated/storage/assignmentTransactions/': {
      id: '/_authenticated/storage/assignmentTransactions/'
      path: '/'
      fullPath: '/storage/assignmentTransactions/'
      preLoaderRoute: typeof AuthenticatedStorageAssignmentTransactionsIndexImport
      parentRoute: typeof AuthenticatedStorageAssignmentTransactionsImport
    }
    '/_authenticated/storage/fixtureCards/': {
      id: '/_authenticated/storage/fixtureCards/'
      path: '/storage/fixtureCards'
      fullPath: '/storage/fixtureCards'
      preLoaderRoute: typeof AuthenticatedStorageFixtureCardsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/storage/shelf/': {
      id: '/_authenticated/storage/shelf/'
      path: '/storage/shelf'
      fullPath: '/storage/shelf'
      preLoaderRoute: typeof AuthenticatedStorageShelfIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/storage/unit/': {
      id: '/_authenticated/storage/unit/'
      path: '/storage/unit'
      fullPath: '/storage/unit'
      preLoaderRoute: typeof AuthenticatedStorageUnitIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/hr/vacations/new/$id': {
      id: '/_authenticated/hr/vacations/new/$id'
      path: '/$id'
      fullPath: '/hr/vacations/new/$id'
      preLoaderRoute: typeof AuthenticatedHrVacationsNewIdImport
      parentRoute: typeof AuthenticatedHrVacationsNewImport
    }
    '/_authenticated/accounting/cashAccounts/$id/': {
      id: '/_authenticated/accounting/cashAccounts/$id/'
      path: '/accounting/cashAccounts/$id'
      fullPath: '/accounting/cashAccounts/$id'
      preLoaderRoute: typeof AuthenticatedAccountingCashAccountsIdIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/admin/company/$id/': {
      id: '/_authenticated/admin/company/$id/'
      path: '/company/$id'
      fullPath: '/admin/company/$id'
      preLoaderRoute: typeof AuthenticatedAdminCompanyIdIndexImport
      parentRoute: typeof AuthenticatedAdminImport
    }
    '/_authenticated/admin/depots/$id/': {
      id: '/_authenticated/admin/depots/$id/'
      path: '/$id'
      fullPath: '/admin/depots/$id'
      preLoaderRoute: typeof AuthenticatedAdminDepotsIdIndexImport
      parentRoute: typeof AuthenticatedAdminDepotsImport
    }
    '/_authenticated/admin/machines/$id/': {
      id: '/_authenticated/admin/machines/$id/'
      path: '/$id'
      fullPath: '/admin/machines/$id'
      preLoaderRoute: typeof AuthenticatedAdminMachinesIdIndexImport
      parentRoute: typeof AuthenticatedAdminMachinesImport
    }
    '/_authenticated/hr/employees/$id/': {
      id: '/_authenticated/hr/employees/$id/'
      path: '/$id'
      fullPath: '/hr/employees/$id'
      preLoaderRoute: typeof AuthenticatedHrEmployeesIdIndexImport
      parentRoute: typeof AuthenticatedHrEmployeesImport
    }
    '/_authenticated/hr/timekeeping/$id/': {
      id: '/_authenticated/hr/timekeeping/$id/'
      path: '/$id'
      fullPath: '/hr/timekeeping/$id'
      preLoaderRoute: typeof AuthenticatedHrTimekeepingIdIndexImport
      parentRoute: typeof AuthenticatedHrTimekeepingImport
    }
    '/_authenticated/storage/assignmentCards/$id/': {
      id: '/_authenticated/storage/assignmentCards/$id/'
      path: '/$id'
      fullPath: '/storage/assignmentCards/$id'
      preLoaderRoute: typeof AuthenticatedStorageAssignmentCardsIdIndexImport
      parentRoute: typeof AuthenticatedStorageAssignmentCardsImport
    }
    '/_authenticated/storage/assignmentTransactions/$id/': {
      id: '/_authenticated/storage/assignmentTransactions/$id/'
      path: '/$id'
      fullPath: '/storage/assignmentTransactions/$id'
      preLoaderRoute: typeof AuthenticatedStorageAssignmentTransactionsIdIndexImport
      parentRoute: typeof AuthenticatedStorageAssignmentTransactionsImport
    }
    '/_authenticated/storage/fixtureCards/$id/': {
      id: '/_authenticated/storage/fixtureCards/$id/'
      path: '/storage/fixtureCards/$id'
      fullPath: '/storage/fixtureCards/$id'
      preLoaderRoute: typeof AuthenticatedStorageFixtureCardsIdIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/storage/shelf/$id/': {
      id: '/_authenticated/storage/shelf/$id/'
      path: '/storage/shelf/$id'
      fullPath: '/storage/shelf/$id'
      preLoaderRoute: typeof AuthenticatedStorageShelfIdIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/storage/unit/$id/': {
      id: '/_authenticated/storage/unit/$id/'
      path: '/storage/unit/$id'
      fullPath: '/storage/unit/$id'
      preLoaderRoute: typeof AuthenticatedStorageUnitIdIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedAdminRoute: AuthenticatedAdminRoute.addChildren({
      AuthenticatedAdminDepotsRoute: AuthenticatedAdminDepotsRoute.addChildren({
        AuthenticatedAdminDepotsNewRoute,
        AuthenticatedAdminDepotsIndexRoute,
        AuthenticatedAdminDepotsIdIndexRoute,
      }),
      AuthenticatedAdminMachinesRoute:
        AuthenticatedAdminMachinesRoute.addChildren({
          AuthenticatedAdminMachinesNewRoute,
          AuthenticatedAdminMachinesIndexRoute,
          AuthenticatedAdminMachinesIdIndexRoute,
        }),
      AuthenticatedAdminIndexRoute,
      AuthenticatedAdminCompanyNewRoute,
      AuthenticatedAdminCompanyIndexRoute,
      AuthenticatedAdminCompanyIdIndexRoute,
    }),
    AuthenticatedDashboardRoute,
    AuthenticatedHrRoute: AuthenticatedHrRoute.addChildren({
      AuthenticatedHrDebitCreditAnalysisRoute,
      AuthenticatedHrEmployeesRoute: AuthenticatedHrEmployeesRoute.addChildren({
        AuthenticatedHrEmployeesNewRoute,
        AuthenticatedHrEmployeesIndexRoute,
        AuthenticatedHrEmployeesIdIndexRoute,
      }),
      AuthenticatedHrFinancesRoute: AuthenticatedHrFinancesRoute.addChildren({
        AuthenticatedHrFinancesIndexRoute,
      }),
      AuthenticatedHrTimekeepingRoute:
        AuthenticatedHrTimekeepingRoute.addChildren({
          AuthenticatedHrTimekeepingNewRoute,
          AuthenticatedHrTimekeepingIndexRoute,
          AuthenticatedHrTimekeepingIdIndexRoute,
        }),
      AuthenticatedHrVacationsRoute: AuthenticatedHrVacationsRoute.addChildren({
        AuthenticatedHrVacationsNewRoute:
          AuthenticatedHrVacationsNewRoute.addChildren({
            AuthenticatedHrVacationsNewIdRoute,
          }),
        AuthenticatedHrVacationsIndexRoute,
      }),
      AuthenticatedHrIndexRoute,
    }),
    AuthenticatedStorageAssignmentCardsRoute:
      AuthenticatedStorageAssignmentCardsRoute.addChildren({
        AuthenticatedStorageAssignmentCardsNewRoute,
        AuthenticatedStorageAssignmentCardsIndexRoute,
        AuthenticatedStorageAssignmentCardsIdIndexRoute,
      }),
    AuthenticatedStorageAssignmentTransactionsRoute:
      AuthenticatedStorageAssignmentTransactionsRoute.addChildren({
        AuthenticatedStorageAssignmentTransactionsNewRoute,
        AuthenticatedStorageAssignmentTransactionsIndexRoute,
        AuthenticatedStorageAssignmentTransactionsIdIndexRoute,
      }),
    AuthenticatedStorageShelvesRoute,
    AuthenticatedStorageUnitsRoute,
    AuthenticatedStorageIndexRoute,
    AuthenticatedAccountingCashAccountsNewRoute,
    AuthenticatedStorageFixtureCardsNewRoute,
    AuthenticatedStorageShelfNewRoute,
    AuthenticatedStorageUnitNewRoute,
    AuthenticatedAccountingCashAccountsIndexRoute,
    AuthenticatedStorageFixtureCardsIndexRoute,
    AuthenticatedStorageShelfIndexRoute,
    AuthenticatedStorageUnitIndexRoute,
    AuthenticatedAccountingCashAccountsIdIndexRoute,
    AuthenticatedStorageFixtureCardsIdIndexRoute,
    AuthenticatedStorageShelfIdIndexRoute,
    AuthenticatedStorageUnitIdIndexRoute,
  }),
  LoginRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/admin",
        "/_authenticated/dashboard",
        "/_authenticated/hr",
        "/_authenticated/storage/assignmentCards",
        "/_authenticated/storage/assignmentTransactions",
        "/_authenticated/storage/shelves",
        "/_authenticated/storage/units",
        "/_authenticated/storage/",
        "/_authenticated/accounting/cashAccounts/new",
        "/_authenticated/storage/fixtureCards/new",
        "/_authenticated/storage/shelf/new",
        "/_authenticated/storage/unit/new",
        "/_authenticated/accounting/cashAccounts/",
        "/_authenticated/storage/fixtureCards/",
        "/_authenticated/storage/shelf/",
        "/_authenticated/storage/unit/",
        "/_authenticated/accounting/cashAccounts/$id/",
        "/_authenticated/storage/fixtureCards/$id/",
        "/_authenticated/storage/shelf/$id/",
        "/_authenticated/storage/unit/$id/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/admin": {
      "filePath": "_authenticated/admin.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/admin/depots",
        "/_authenticated/admin/machines",
        "/_authenticated/admin/",
        "/_authenticated/admin/company/new",
        "/_authenticated/admin/company/",
        "/_authenticated/admin/company/$id/"
      ]
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/hr": {
      "filePath": "_authenticated/hr.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/hr/debitCreditAnalysis",
        "/_authenticated/hr/employees",
        "/_authenticated/hr/finances",
        "/_authenticated/hr/timekeeping",
        "/_authenticated/hr/vacations",
        "/_authenticated/hr/"
      ]
    },
    "/_authenticated/admin/depots": {
      "filePath": "_authenticated/admin/depots.tsx",
      "parent": "/_authenticated/admin",
      "children": [
        "/_authenticated/admin/depots/new",
        "/_authenticated/admin/depots/",
        "/_authenticated/admin/depots/$id/"
      ]
    },
    "/_authenticated/admin/machines": {
      "filePath": "_authenticated/admin/machines.tsx",
      "parent": "/_authenticated/admin",
      "children": [
        "/_authenticated/admin/machines/new",
        "/_authenticated/admin/machines/",
        "/_authenticated/admin/machines/$id/"
      ]
    },
    "/_authenticated/hr/debitCreditAnalysis": {
      "filePath": "_authenticated/hr/debitCreditAnalysis.tsx",
      "parent": "/_authenticated/hr"
    },
    "/_authenticated/hr/employees": {
      "filePath": "_authenticated/hr/employees.tsx",
      "parent": "/_authenticated/hr",
      "children": [
        "/_authenticated/hr/employees/new",
        "/_authenticated/hr/employees/",
        "/_authenticated/hr/employees/$id/"
      ]
    },
    "/_authenticated/hr/finances": {
      "filePath": "_authenticated/hr/finances.tsx",
      "parent": "/_authenticated/hr",
      "children": [
        "/_authenticated/hr/finances/"
      ]
    },
    "/_authenticated/hr/timekeeping": {
      "filePath": "_authenticated/hr/timekeeping.tsx",
      "parent": "/_authenticated/hr",
      "children": [
        "/_authenticated/hr/timekeeping/new",
        "/_authenticated/hr/timekeeping/",
        "/_authenticated/hr/timekeeping/$id/"
      ]
    },
    "/_authenticated/hr/vacations": {
      "filePath": "_authenticated/hr/vacations.tsx",
      "parent": "/_authenticated/hr",
      "children": [
        "/_authenticated/hr/vacations/new",
        "/_authenticated/hr/vacations/"
      ]
    },
    "/_authenticated/storage/assignmentCards": {
      "filePath": "_authenticated/storage/assignmentCards.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/storage/assignmentCards/new",
        "/_authenticated/storage/assignmentCards/",
        "/_authenticated/storage/assignmentCards/$id/"
      ]
    },
    "/_authenticated/storage/assignmentTransactions": {
      "filePath": "_authenticated/storage/assignmentTransactions.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/storage/assignmentTransactions/new",
        "/_authenticated/storage/assignmentTransactions/",
        "/_authenticated/storage/assignmentTransactions/$id/"
      ]
    },
    "/_authenticated/storage/shelves": {
      "filePath": "_authenticated/storage/shelves.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/storage/units": {
      "filePath": "_authenticated/storage/units.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/": {
      "filePath": "_authenticated/admin/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/hr/": {
      "filePath": "_authenticated/hr/index.tsx",
      "parent": "/_authenticated/hr"
    },
    "/_authenticated/storage/": {
      "filePath": "_authenticated/storage/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/accounting/cashAccounts/new": {
      "filePath": "_authenticated/accounting/cashAccounts/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/company/new": {
      "filePath": "_authenticated/admin/company/new.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/depots/new": {
      "filePath": "_authenticated/admin/depots/new.tsx",
      "parent": "/_authenticated/admin/depots"
    },
    "/_authenticated/admin/machines/new": {
      "filePath": "_authenticated/admin/machines/new.tsx",
      "parent": "/_authenticated/admin/machines"
    },
    "/_authenticated/hr/employees/new": {
      "filePath": "_authenticated/hr/employees/new.tsx",
      "parent": "/_authenticated/hr/employees"
    },
    "/_authenticated/hr/timekeeping/new": {
      "filePath": "_authenticated/hr/timekeeping/new.tsx",
      "parent": "/_authenticated/hr/timekeeping"
    },
    "/_authenticated/hr/vacations/new": {
      "filePath": "_authenticated/hr/vacations/new.tsx",
      "parent": "/_authenticated/hr/vacations",
      "children": [
        "/_authenticated/hr/vacations/new/$id"
      ]
    },
    "/_authenticated/storage/assignmentCards/new": {
      "filePath": "_authenticated/storage/assignmentCards/new.tsx",
      "parent": "/_authenticated/storage/assignmentCards"
    },
    "/_authenticated/storage/assignmentTransactions/new": {
      "filePath": "_authenticated/storage/assignmentTransactions/new.tsx",
      "parent": "/_authenticated/storage/assignmentTransactions"
    },
    "/_authenticated/storage/fixtureCards/new": {
      "filePath": "_authenticated/storage/fixtureCards/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/storage/shelf/new": {
      "filePath": "_authenticated/storage/shelf/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/storage/unit/new": {
      "filePath": "_authenticated/storage/unit/new.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/accounting/cashAccounts/": {
      "filePath": "_authenticated/accounting/cashAccounts/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/company/": {
      "filePath": "_authenticated/admin/company/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/depots/": {
      "filePath": "_authenticated/admin/depots/index.tsx",
      "parent": "/_authenticated/admin/depots"
    },
    "/_authenticated/admin/machines/": {
      "filePath": "_authenticated/admin/machines/index.tsx",
      "parent": "/_authenticated/admin/machines"
    },
    "/_authenticated/hr/employees/": {
      "filePath": "_authenticated/hr/employees/index.tsx",
      "parent": "/_authenticated/hr/employees"
    },
    "/_authenticated/hr/finances/": {
      "filePath": "_authenticated/hr/finances/index.tsx",
      "parent": "/_authenticated/hr/finances"
    },
    "/_authenticated/hr/timekeeping/": {
      "filePath": "_authenticated/hr/timekeeping/index.tsx",
      "parent": "/_authenticated/hr/timekeeping"
    },
    "/_authenticated/hr/vacations/": {
      "filePath": "_authenticated/hr/vacations/index.tsx",
      "parent": "/_authenticated/hr/vacations"
    },
    "/_authenticated/storage/assignmentCards/": {
      "filePath": "_authenticated/storage/assignmentCards/index.tsx",
      "parent": "/_authenticated/storage/assignmentCards"
    },
    "/_authenticated/storage/assignmentTransactions/": {
      "filePath": "_authenticated/storage/assignmentTransactions/index.tsx",
      "parent": "/_authenticated/storage/assignmentTransactions"
    },
    "/_authenticated/storage/fixtureCards/": {
      "filePath": "_authenticated/storage/fixtureCards/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/storage/shelf/": {
      "filePath": "_authenticated/storage/shelf/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/storage/unit/": {
      "filePath": "_authenticated/storage/unit/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/hr/vacations/new/$id": {
      "filePath": "_authenticated/hr/vacations/new/$id.tsx",
      "parent": "/_authenticated/hr/vacations/new"
    },
    "/_authenticated/accounting/cashAccounts/$id/": {
      "filePath": "_authenticated/accounting/cashAccounts/$id/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/company/$id/": {
      "filePath": "_authenticated/admin/company/$id/index.tsx",
      "parent": "/_authenticated/admin"
    },
    "/_authenticated/admin/depots/$id/": {
      "filePath": "_authenticated/admin/depots/$id/index.tsx",
      "parent": "/_authenticated/admin/depots"
    },
    "/_authenticated/admin/machines/$id/": {
      "filePath": "_authenticated/admin/machines/$id/index.tsx",
      "parent": "/_authenticated/admin/machines"
    },
    "/_authenticated/hr/employees/$id/": {
      "filePath": "_authenticated/hr/employees/$id/index.tsx",
      "parent": "/_authenticated/hr/employees"
    },
    "/_authenticated/hr/timekeeping/$id/": {
      "filePath": "_authenticated/hr/timekeeping/$id/index.tsx",
      "parent": "/_authenticated/hr/timekeeping"
    },
    "/_authenticated/storage/assignmentCards/$id/": {
      "filePath": "_authenticated/storage/assignmentCards/$id/index.tsx",
      "parent": "/_authenticated/storage/assignmentCards"
    },
    "/_authenticated/storage/assignmentTransactions/$id/": {
      "filePath": "_authenticated/storage/assignmentTransactions/$id/index.tsx",
      "parent": "/_authenticated/storage/assignmentTransactions"
    },
    "/_authenticated/storage/fixtureCards/$id/": {
      "filePath": "_authenticated/storage/fixtureCards/$id/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/storage/shelf/$id/": {
      "filePath": "_authenticated/storage/shelf/$id/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/storage/unit/$id/": {
      "filePath": "_authenticated/storage/unit/$id/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
