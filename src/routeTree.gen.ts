/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedHrIndexImport } from './routes/_authenticated/hr/index'
import { Route as AuthenticatedHrTallyImport } from './routes/_authenticated/hr/tally'
import { Route as AuthenticatedHrPersonnelImport } from './routes/_authenticated/hr/personnel'
import { Route as AuthenticatedHrLeavesImport } from './routes/_authenticated/hr/leaves'
import { Route as AuthenticatedHrFinancesImport } from './routes/_authenticated/hr/finances'
import { Route as AuthenticatedHrDebitCreditAnalysisImport } from './routes/_authenticated/hr/debitCreditAnalysis'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  path: '/profile',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHrIndexRoute = AuthenticatedHrIndexImport.update({
  path: '/hr/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHrTallyRoute = AuthenticatedHrTallyImport.update({
  path: '/hr/tally',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHrPersonnelRoute = AuthenticatedHrPersonnelImport.update({
  path: '/hr/personnel',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHrLeavesRoute = AuthenticatedHrLeavesImport.update({
  path: '/hr/leaves',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHrFinancesRoute = AuthenticatedHrFinancesImport.update({
  path: '/hr/finances',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedHrDebitCreditAnalysisRoute =
  AuthenticatedHrDebitCreditAnalysisImport.update({
    path: '/hr/debitCreditAnalysis',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/hr/debitCreditAnalysis': {
      id: '/_authenticated/hr/debitCreditAnalysis'
      path: '/hr/debitCreditAnalysis'
      fullPath: '/hr/debitCreditAnalysis'
      preLoaderRoute: typeof AuthenticatedHrDebitCreditAnalysisImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/hr/finances': {
      id: '/_authenticated/hr/finances'
      path: '/hr/finances'
      fullPath: '/hr/finances'
      preLoaderRoute: typeof AuthenticatedHrFinancesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/hr/leaves': {
      id: '/_authenticated/hr/leaves'
      path: '/hr/leaves'
      fullPath: '/hr/leaves'
      preLoaderRoute: typeof AuthenticatedHrLeavesImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/hr/personnel': {
      id: '/_authenticated/hr/personnel'
      path: '/hr/personnel'
      fullPath: '/hr/personnel'
      preLoaderRoute: typeof AuthenticatedHrPersonnelImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/hr/tally': {
      id: '/_authenticated/hr/tally'
      path: '/hr/tally'
      fullPath: '/hr/tally'
      preLoaderRoute: typeof AuthenticatedHrTallyImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/hr/': {
      id: '/_authenticated/hr/'
      path: '/hr'
      fullPath: '/hr'
      preLoaderRoute: typeof AuthenticatedHrIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedDashboardRoute,
    AuthenticatedProfileRoute,
    AuthenticatedHrDebitCreditAnalysisRoute,
    AuthenticatedHrFinancesRoute,
    AuthenticatedHrLeavesRoute,
    AuthenticatedHrPersonnelRoute,
    AuthenticatedHrTallyRoute,
    AuthenticatedHrIndexRoute,
  }),
  LoginRoute,
})

/* prettier-ignore-end */
