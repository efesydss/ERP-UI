/**
 * Generated by orval v7.7.0 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {
  faker
} from '@faker-js/faker';

import {
  HttpResponse,
  delay,
  http
} from 'msw';

import {
  CurrencyEnum
} from './model';
import type {
  CashAccounts
} from './model';


export const getCashAccountsResponseMock = (overrideResponse: Partial< CashAccounts > = {}): CashAccounts => ({message: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), error: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), data: faker.helpers.arrayElement([Array.from({ length: faker.number.int({ min: 1, max: 10 }) }, (_, i) => i + 1).map(() => ({id: faker.helpers.arrayElement([faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), null]), undefined]), code: faker.string.alpha(20), name: faker.string.alpha(20), currency: faker.helpers.arrayElement(Object.values(CurrencyEnum))})), undefined]), total: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined]), page: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined]), pageSize: faker.helpers.arrayElement([faker.number.int({min: undefined, max: undefined}), undefined]), ...overrideResponse})


export const getCashAccountsMockHandler = (overrideResponse?: CashAccounts | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<CashAccounts> | CashAccounts)) => {
  return http.post('*/api/accounting/cashAccounts', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getCashAccountsResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getOpenAPIDefinitionMock = () => [
  getCashAccountsMockHandler()
]
